#                   group = "Parques eólicos ativos") %>%
#               # labelOptions = labelOptions(
#               #   style = list("font-weight" = "normal",
#               #                padding = "3px 8px"),
#               #                textsize = "15px",
#               #                direction = "auto") %>%
#  addCircleMarkers(data = parques_projetados,
#                    color = "#273bea",
#                    radius = 2.0,
#                   weight = 1,
#                   group = "Parques eólicos projetados") %>%
#               # labelOptions = labelOptions(
#               #   style = list("font-weight" = "normal",
#               #                padding = "3px 8px"),
#               #                textsize = "15px",
#               #                direction = "auto")
#   addLayersControl(
#     overlayGroups = c("Estados",
#                       "Parques eólicos ativos",
#                       "Parques eólicos projetados"
#                       ),
#         options = layersControlOptions(collapsed = TRUE, autoZIndex = TRUE))
#
# eolicas_brasil
cres_eol <- read.csv2("dados/pot_anos.csv", h=T, sep=";")
cres_eol <- rename(cres_eol, ano = ano) %>%
filter(ano < 2021)
knitr::include_graphics("imagens/cap06/Figura_6.3a.jpg")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("imagens/cap07/Figura_7.2.jpg")
knitr::include_graphics("imagens/cap07/Figura_7.7.jpg")
knitr::include_graphics("imagens/cap07/Figura_7.9.jpg")
knitr::include_graphics("imagens/cap07/Figura_7.11_AL.png")
knitr::include_graphics("imagens/cap08/Figura_8.1a.jpg")
knitr::include_graphics("imagens/cap08/Figura_8.4.jpg")
knitr::include_graphics("imagens/cap08/Figura_8.4.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("imagens/cap01/Figura_1.2.jpg")
# regioes <- st_read("dados/shapes/regioes_2010.shp", quiet = TRUE)
#
# potencial_eolico <- data.frame(
#   regiao = c("Nordeste", "Sudeste", "Sul", "Norte", "Centro-Oeste"),
#   valor = c(75.0, 29.7, 22.8, 12.8, 3.1)
# )
#
# regioes <- rename(regioes, regiao = nome)
#
# regioes_completo <- regioes %>%
#   left_join(potencial_eolico, "regiao")
#
#
# bins <- c(0, 5, 15, 25, 45,75)
# qpal = colorBin("Blues", potencial_eolico$valor, bins = bins)
#
#
# labels <- sprintf(
#   "<strong>%s</strong>",
#   regioes_completo$valor) %>% lapply(htmltools::HTML)
#
# potencial_vento <- leaflet(regioes_completo) %>%
#
#   addPolygons(stroke = TRUE,
#               opacity = 1.0,
#               fillOpacity = 1.0,
#               smoothFactor = 0.5,
#               color = "white",
#               fillColor = ~qpal(regioes_completo$valor),
#               weight = 1,
#               label = labels,
#               labelOptions = labelOptions(
#                 style = list("font-weight" = "normal",
#                              padding = "3px 8px"),
#                              textsize = "15px",
#                              direction = "auto"),
#               highlight = highlightOptions(weight = 1,
#                                  color = "grey",
#                                  fillOpacity = 0.9,
#                                  bringToFront = T)) %>%
#    addLegend(values = ~regioes_completo$valor,
#             pal = qpal,
#             position = "bottomleft",
#             title = "Potencial eólico (GW)")
#
# potencial_vento
mycolors1 <- c("#1F95C5", "#004B5B", "#C7C6C5", "#E8F1F2")
matriz_2030 <- data.frame(
fonte = c("Hidrelétrica", "Eólica", "Térmica", "Outras fontes"),
Percentagem = c(49, 14, 16, 21)
)
G8 <- matriz_2030 %>%
plot_ly(labels = ~fonte,
values = ~Percentagem,
marker = list(colors = mycolors1)) %>%
add_pie(hole = 0.4) %>%
layout(xaxis = list(zeroline = F,
showline = F,
showticklabels = F,
showgrid = F),
yaxis = list(zeroline = F,
showline = F,
showticklabels=F,
showgrid=F))
knitr::include_graphics("imagens/cap06/Figura_6.3ab.jpg")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_8.1 <- read.csv2("dados/tabelas/Tabela_8.1.csv", encoding="UTF-8")
knitr::kable(tabela_8.1,
booktabs = TRUE,
longtable = TRUE,
caption = 'Número de aerogeradores por estado, áreas de varredura dos rotores e comparativo em projeção vertical.',
col.names = c("Táxon", "Nome comum", "Ameaça global (IUCN, 2020)", "Ameaça nacional (MMA, 2014)", "Área de ocorrência predominante", "Habitat (Costeiro/Nerítico/Oceânico)", "Status migratório", "Impacto e risco potencial dos CEOs")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"), align = "llccll")
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_8.1 <- read.csv2("dados/tabelas/Tabela_8.1.csv", encoding="UTF-8")
knitr::kable(tabela_8.1,
booktabs = TRUE,
longtable = TRUE,
align = "llccll",
caption = 'Número de aerogeradores por estado, áreas de varredura dos rotores e comparativo em projeção vertical.',
col.names = c("Táxon", "Nome comum", "Ameaça global (IUCN, 2020)", "Ameaça nacional (MMA, 2014)", "Área de ocorrência predominante", "Habitat (Costeiro/Nerítico/Oceânico)", "Status migratório", "Impacto e risco potencial dos CEOs")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_8.1 <- read.csv2("dados/tabelas/Tabela_8.1.csv", encoding="UTF-8")
knitr::kable(tabela_8.1,
booktabs = TRUE,
longtable = TRUE,
align = "llccll",
caption = 'Espécies de aves marinhas e costeiras de interesse para os Complexos Eólicos Offshore no Brasil. Sequências e nomenclaturas estão de acordo com a lista brasileira de aves (Pacheco et al. 2021). As espécies vagantes foram excluídas, pois tem baixa probabilidade de impacto oriundo dos CEOs e baixo risco presumível.',
col.names = c("Táxon", "Nome comum", "Ameaça global (IUCN, 2020)", "Ameaça nacional (MMA, 2014)", "Área de ocorrência predominante", "Habitat (Costeiro/Nerítico/Oceânico)", "Status migratório", "Impacto e risco potencial dos CEOs")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
knitr::opts_chunk$set(echo = TRUE)
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.1 <- read.csv2("dados/tabelas/Tabela_7.1.csv", encoding="UTF-8")
knitr::kable(tabela_7.1,
booktabs = TRUE,
longtable = TRUE,
caption = "Espécies de aves migratórias^[Nomenclatura de acordo com o Comitê Brasileiro de Registros Ornitológicos - CBRO (Pacheco et al. 2021).] e seus respectivos escores de vulnerabilidade usados na análise do Zonation. (*A = Reprodução exclusiva no Brasil; B = Flocking; C = Voo noturno ou crepuscular; D =	Planador; E = Alta sensibilidade aos impactos das estruturas de apoio, exceto colisão; F = Massa corporal média (0,25 qdo >300g); G =	categoria de ameaça; H = PESO FINAL*).",
col.names = c("Espécie", "A", "B", "C", "D", "E", "F", "G", "H")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.2 <- read.csv2("dados/tabelas/Tabela_7.2.csv", encoding="UTF-8")
knitr::kable(tabela_7.2,
booktabs = TRUE,
longtable = TRUE,
caption = 'Critérios relativos ao escore de vulnerabilidade de aves migratórias a parques eólicos.',
col.names = c("Critério", "Conceito empregado")) %>%
column_spec(1, italic = FALSE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.3 <- read.csv2("dados/tabelas/Tabela_7.3.csv", encoding="UTF-8")
knitr::kable(tabela_7.3,
booktabs = TRUE,
longtable = TRUE,
align = "lc",
caption = 'Parâmetros de configuração utilizados no Zonation.',
col.names = c("Parâmetro", "Valor")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.4 <- read.csv2("dados/tabelas/Tabela_7.4.csv", encoding="UTF-8")
knitr::kable(tabela_7.4,
booktabs = TRUE,
longtable = TRUE,
align = "lcc",
caption = 'Percentual de células constantes na solução de priorização por riqueza, ponderada pelos escores de vulnerabilidade, para espécies de aves migratórias ameaçadas (conforme Portaria MMA nº 444/14).',
col.names = c("Espécie", "Categoria", "Porcentagem de células na solução")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.5 <- read.csv2("dados/tabelas/Tabela_7.5.csv", encoding="UTF-8")
knitr::kable(tabela_7.5,
booktabs = TRUE,
longtable = TRUE,
align = "lcc",
caption = 'Percentual de células com registros na solução de priorização pelo Zonation, com corte em 7%, para as espécies de aves migratórias, ordenados pelas espécies menos comuns.',
col.names = c("Espécie", "Nº de células com registros pré priorização", "% de células com registro na solução")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.6 <- read.csv2("dados/tabelas/Tabela_7.6.csv", encoding="UTF-8")
knitr::kable(tabela_7.6,
booktabs = TRUE,
longtable = TRUE,
caption = 'Número de aerogeradores por estado, áreas de varredura dos rotores e comparativo em projeção vertical.',
col.names = c("Estado", "Nº de aerogeradores", "Soma da área de varredura das pás (m^2^)", "Soma da área de varredura das pás em projeção vertical, com 100 m de altura (comprimento total em km)")) %>%
column_spec(1, italic = FALSE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.1 <- read.csv2("dados/tabelas/Tabela_7.1.csv", encoding="UTF-8")
knitr::kable(tabela_7.1,
booktabs = TRUE,
longtable = TRUE,
caption = "Espécies de aves migratórias^[Nomenclatura de acordo com o Comitê Brasileiro de Registros Ornitológicos - CBRO (Pacheco et al. 2021).] e seus respectivos escores de vulnerabilidade usados na análise do Zonation. (A = Reprodução exclusiva no Brasil; B = Flocking; C = Voo noturno ou crepuscular; D =	Planador; E = Alta sensibilidade aos impactos das estruturas de apoio, exceto colisão; F = Massa corporal média (0,25 qdo >300g); G =	categoria de ameaça; H = PESO FINAL).",
col.names = c("Espécie", "A", "B", "C", "D", "E", "F", "G", "H")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.1 <- read.csv2("dados/tabelas/Tabela_7.1.csv", encoding="UTF-8")
knitr::kable(tabela_7.1,
booktabs = TRUE,
longtable = TRUE,
caption = "Espécies de aves migratórias e seus respectivos escores de vulnerabilidade usados na análise do Zonation. (*A = Reprodução exclusiva no Brasil; B = Flocking; C = Voo noturno ou crepuscular; D =	Planador; E = Alta sensibilidade aos impactos das estruturas de apoio, exceto colisão; F = Massa corporal média (0,25 qdo >300g); G =	Categoria de ameaça; H = Peso final*).",
col.names = c("Espécie", "A", "B", "C", "D", "E", "F", "G", "H")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.1 <- read.csv2("dados/tabelas/Tabela_7.1.csv", encoding="UTF-8")
knitr::kable(tabela_7.1,
booktabs = TRUE,
longtable = TRUE,
caption = "Espécies de aves migratórias e seus respectivos escores de vulnerabilidade usados na análise do Zonation. (A = Reprodução exclusiva no Brasil; B = Flocking; C = Voo noturno ou crepuscular; D =	Planador; E = Alta sensibilidade aos impactos das estruturas de apoio, exceto colisão; F = Massa corporal média (0,25 qdo >300g); G = Categoria de ameaça; H = PESO FINAL).",
col.names = c("Espécie", "A", "B", "C", "D", "E", "F", "G", "H")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex()
knitr::include_graphics("imagens/cap08/Figura_8.1ab.jpg")
knitr::include_graphics("imagens/cap08/Figura_8.1ab.jpg")
knitr::opts_chunk$set(echo = TRUE)
cres_eol <- read.csv2("dados/pot_anos.csv", h=T, sep=";")
cres_eol <- rename(cres_eol, ano = ano) %>%
filter(ano < 2021)
cres_eol  %>%
mutate(ano=as.numeric(ano))
#view(cres_eol)
#positions <- c("2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020")
cres_eol.melt <- reshape2::melt(cres_eol, id = "ano")
P1 <-  ggplot(data = cres_eol.melt, aes(x = ano, y = value, fill = variable))
P1 <-  P1 + geom_col(position = "dodge") + scale_y_continuous(" ", limits = c(0, 18000), breaks = seq(0, 18000, 3000))
#scale_x_continuous("ano", labels = as.numeric(ano), breaks = ano)
#scale_x_discrete(labels=as.character(ano),breaks=ano)
#scale_x_continuous(breaks=0:15, labels=c("2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"))
P1 <-  P1 + theme(
panel.background = element_blank(),
#panel.grid.minor.x = element_line(color = "grey80"),
#panel.grid.major.x = element_line(color = "grey80"),
#panel.grid.minor.y = element_line(color = "grey80"),
panel.grid.major.y = element_line(color = "grey80")
)
#Altera cor das series de dados
P1 <-  P1 + scale_fill_manual(values = c("#004b5b", "#1F95C5"), guide = "none")
P1 <-  P1 + scale_size_continuous(range = c(0, 18000))
P1 <- P1 + labs(
fill = "Potência",
x = " ",
y = " ")
# Set legend position as numeric vector c(x, y)
# Place the legend inside the plot
P1 <-  P1  + theme(legend.position = c(0.2, 0.8),
legend.direction = "vertical")
# Edit legend title and labels
#P1 <-  P1 + scale_fill_discrete(name = "Potência", labels = c("Instalada", "Acumulada"))
P1 <-  P1 + scale_fill_discrete(name = "Potência (MW)", labels = c("Instalada","Acumulada")) + scale_fill_manual(values=c("#004b5b", "#1F95C5"))
P1
cres_eol <- read.csv2("dados/pot_anos.csv", h=T, sep=";")
cres_eol <- rename(cres_eol, ano = ano) %>%
filter(ano < 2021)
cres_eol  %>%
mutate(ano=as.numeric(ano))
#view(cres_eol)
#positions <- c("2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020")
cres_eol.melt <- reshape2::melt(cres_eol, id = "ano")
P1 <-  ggplot(data = cres_eol.melt, aes(x = ano, y = value, fill = variable))
P1 <-  P1 + geom_col(position = "dodge") + scale_y_continuous(" ", limits = c(0, 18000), breaks = seq(0, 18000, 3000))
#scale_x_continuous("ano", labels = as.numeric(ano), breaks = ano)
#scale_x_discrete(labels=as.character(ano),breaks=ano)
#scale_x_continuous(breaks=0:15, labels=c("2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"))
P1 <-  P1 + theme(
panel.background = element_blank(),
#panel.grid.minor.x = element_line(color = "grey80"),
#panel.grid.major.x = element_line(color = "grey80"),
#panel.grid.minor.y = element_line(color = "grey80"),
panel.grid.major.y = element_line(color = "grey80")
)
#Altera cor das series de dados
P1 <-  P1 + scale_fill_manual(values = c("#004b5b", "#1F95C5"), guide = "none")
P1 <-  P1 + scale_size_continuous(range = c(0, 18000))
P1 <- P1 + labs(
fill = "Potência",
x = " ",
y = " ")
# Set legend position as numeric vector c(x, y)
# Place the legend inside the plot
P1 <-  P1  + theme(legend.position = c(0.2, 0.8),
legend.direction = "vertical")
# Edit legend title and labels
#P1 <-  P1 + scale_fill_discrete(name = "Potência", labels = c("Instalada", "Acumulada"))
P1 <-  P1 + scale_fill_discrete(name = "Potência (MW)", labels = c("Instalada","Acumulada")) + scale_fill_manual(values=c("#004b5b", "#1F95C5"))
P1
knitr::include_graphics("imagens/cap01/Figura_1.2.jpg")
# regioes <- st_read("dados/shapes/regioes_2010.shp", quiet = TRUE)
#
# potencial_eolico <- data.frame(
#   regiao = c("Nordeste", "Sudeste", "Sul", "Norte", "Centro-Oeste"),
#   valor = c(75.0, 29.7, 22.8, 12.8, 3.1)
# )
#
# regioes <- rename(regioes, regiao = nome)
#
# regioes_completo <- regioes %>%
#   left_join(potencial_eolico, "regiao")
#
#
# bins <- c(0, 5, 15, 25, 45,75)
# qpal = colorBin("Blues", potencial_eolico$valor, bins = bins)
#
#
# labels <- sprintf(
#   "<strong>%s</strong>",
#   regioes_completo$valor) %>% lapply(htmltools::HTML)
#
# potencial_vento <- leaflet(regioes_completo) %>%
#
#   addPolygons(stroke = TRUE,
#               opacity = 1.0,
#               fillOpacity = 1.0,
#               smoothFactor = 0.5,
#               color = "white",
#               fillColor = ~qpal(regioes_completo$valor),
#               weight = 1,
#               label = labels,
#               labelOptions = labelOptions(
#                 style = list("font-weight" = "normal",
#                              padding = "3px 8px"),
#                              textsize = "15px",
#                              direction = "auto"),
#               highlight = highlightOptions(weight = 1,
#                                  color = "grey",
#                                  fillOpacity = 0.9,
#                                  bringToFront = T)) %>%
#    addLegend(values = ~regioes_completo$valor,
#             pal = qpal,
#             position = "bottomleft",
#             title = "Potencial eólico (GW)")
#
# potencial_vento
cres_eol <- read.csv2("dados/pot_anos.csv", h=T, sep=";")
cres_eol <- rename(cres_eol, ano = ano) %>%
filter(ano < 2021)
cres_eol  %>%
mutate(ano=as.numeric(ano))
#view(cres_eol)
#positions <- c("2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020")
cres_eol.melt <- reshape2::melt(cres_eol, id = "ano")
P1 <-  ggplot(data = cres_eol.melt, aes(x = ano, y = value, fill = variable))
P1 <-  P1 + geom_col(position = "dodge") + scale_y_continuous(" ", limits = c(0, 18000), breaks = seq(0, 18000, 3000))
#scale_x_continuous("ano", labels = as.numeric(ano), breaks = ano)
#scale_x_discrete(labels=as.character(ano),breaks=ano)
#scale_x_continuous(breaks=0:15, labels=c("2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"))
P1 <-  P1 + theme(
panel.background = element_blank(),
#panel.grid.minor.x = element_line(color = "grey80"),
#panel.grid.major.x = element_line(color = "grey80"),
#panel.grid.minor.y = element_line(color = "grey80"),
panel.grid.major.y = element_line(color = "grey80")
)
#Altera cor das series de dados
P1 <-  P1 + scale_fill_manual(values = c("#004b5b", "#1F95C5"), guide = "none")
P1 <-  P1 + scale_size_continuous(range = c(0, 18000))
P1 <- P1 + labs(
fill = "Potência",
x = " ",
y = " ")
# Set legend position as numeric vector c(x, y)
# Place the legend inside the plot
P1 <-  P1  + theme(legend.position = c(0.2, 0.8),
legend.direction = "vertical")
# Edit legend title and labels
#P1 <-  P1 + scale_fill_discrete(name = "Potência", labels = c("Instalada", "Acumulada"))
P1 <-  P1 + scale_fill_discrete(name = "Potência (MW)", labels = c("Instalada","Acumulada")) + scale_fill_manual(values=c("#004b5b", "#1F95C5"))
P1
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("imagens/cap01/Figura_1.4.jpg")
# parques_ativos <- readOGR("dados/shapes/EOL___Base_Existente.shp", verbose = FALSE)
# parques_projetados <- readOGR("dados/shapes/EOL___Expansão_Planejada.shp", verbose = FALSE)
# biomas <- readOGR("dados/shapes/lm_bioma_250.shp", verbose = FALSE)
# estados <- readOGR("dados/shapes/estados_2010.shp", verbose = FALSE)
#
# cor_biomas <- c("#006633", "#FFFFCC", "#CC9966","#99CC66", "#999966", "#CC9999")
#
# #nomes_biomas <-  c("Amazônia", "Caatinga", "Cerrado", "Mata Atlântica", "Pampa", "Pantanal")
#
# eolicas_brasil <- leaflet() %>%
#    setView(lng = -58, lat = -14, zoom = 4.0) %>%
#    #addProviderTiles(providers$OpenStreetMap.Mapnik, group = "Open Street Map") %>%
#   addPolygons(data = biomas, color = "white", weight = 0.5, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.5,
#     fillColor = cor_biomas,
#     highlightOptions = highlightOptions(color = "black", weight = 1, bringToFront = TRUE), group = "Biomas") %>%
#    addPolygons(data = estados, color = "white", weight = 0.5, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.0,
#     # fillColor = cor_biomas,
#     highlightOptions = highlightOptions(color = "black", weight = 1, bringToFront = TRUE), group = "Estados") %>%
#   addCircleMarkers(data = parques_ativos,
#                    color = "#EB0000",
#                    radius = 2.0,
#                   weight = 1,
#                   group = "Parques eólicos ativos") %>%
#               # labelOptions = labelOptions(
#               #   style = list("font-weight" = "normal",
#               #                padding = "3px 8px"),
#               #                textsize = "15px",
#               #                direction = "auto") %>%
#  addCircleMarkers(data = parques_projetados,
#                    color = "#273bea",
#                    radius = 2.0,
#                   weight = 1,
#                   group = "Parques eólicos projetados") %>%
#               # labelOptions = labelOptions(
#               #   style = list("font-weight" = "normal",
#               #                padding = "3px 8px"),
#               #                textsize = "15px",
#               #                direction = "auto")
#   addLayersControl(
#     overlayGroups = c("Estados",
#                       "Parques eólicos ativos",
#                       "Parques eólicos projetados"
#                       ),
#         options = layersControlOptions(collapsed = TRUE, autoZIndex = TRUE))
#
# eolicas_brasil
knitr::opts_chunk$set(echo = TRUE)
ameacadas2 <- read.csv2("dados/spp_mig_spp_ame2.csv", h=T, sep=";")
#view(ameacadas2)
colors <- c("#1F95C5", "#004b5b")
positions <- c("CR", "EN", "VU", "NT", "DD")
G9 <- ggplot(ameacadas2, aes(x = factor(Categoria), y = Total, fill = factor(Especies))) +
geom_bar(stat = "identity", position = position_dodge()) + geom_text(aes(y = Total,
ymax = Total, label = round(Total, 2)), position = position_dodge(width = 0.9),
vjust = -0.5, color = "black") + scale_y_continuous(" ", limits = c(0,
120), breaks = seq(0, 120, 20)) + scale_x_discrete("Categoria", limits = positions) +
scale_fill_discrete(name = " ", labels = c("Espécies migratórias", "Espécies migratórias ameaçadas")) + ylim(0, 120) +
scale_y_continuous(breaks = seq(0, 120, by=20))
library(tidyverse)
library(data.table)
library(descr)
library(RColorBrewer)
library(kableExtra)
library(knitr)
library(DT)
library(plotly)
library(ggthemes)
library(forcats)
library(leaflet)
library(sf)
library(rgdal)
library(treemapify)
library(reshape2)
library(randomcoloR)
ameacadas2 <- read.csv2("dados/spp_mig_spp_ame2.csv", h=T, sep=";")
#view(ameacadas2)
colors <- c("#1F95C5", "#004b5b")
positions <- c("CR", "EN", "VU", "NT", "DD")
G9 <- ggplot(ameacadas2, aes(x = factor(Categoria), y = Total, fill = factor(Especies))) +
geom_bar(stat = "identity", position = position_dodge()) + geom_text(aes(y = Total,
ymax = Total, label = round(Total, 2)), position = position_dodge(width = 0.9),
vjust = -0.5, color = "black") + scale_y_continuous(" ", limits = c(0,
120), breaks = seq(0, 120, 20)) + scale_x_discrete("Categoria", limits = positions) +
scale_fill_discrete(name = " ", labels = c("Espécies migratórias", "Espécies migratórias ameaçadas")) + ylim(0, 120) +
scale_y_continuous(breaks = seq(0, 120, by=20))
G9 <-  G9 + theme(
panel.background = element_blank(),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()
)
G9 <-  G9  + theme(legend.position = c(0.85, 0.85),
legend.direction = "vertical")
G9 <-  G9 + scale_fill_manual(values = c("#1F95C5", "#004b5b"), name = "Nº de espécies", labels = c("Ameaçadas", "Migratórias ameaçadas"))
G9
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("imagens/cap07/Figura_7.1.jpg")
install.packages("kableExtra")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('kableExtra')
library(kableExtra)
library(tidyverse)
tabela_7.1 <- read.csv2("dados/tabelas/Tabela_7.1.csv", encoding="UTF-8")
kbl(tabela_7.1,
booktabs = TRUE,
longtable = TRUE,
# caption = "Espécies de aves migratórias e seus respectivos escores de vulnerabilidade usados na análise do Zonation.*",
col.names = c("Espécie", "A", "B", "C", "D", "E", "F", "G", "H")) %>%
column_spec(1, italic = TRUE) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"), latex_options = c("repeat_header"))
